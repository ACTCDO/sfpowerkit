{"version":"1.8.4","commands":{"sfpowerkit:azpipelines:updatevariable":{"id":"sfpowerkit:azpipelines:updatevariable","description":"Updates a shared variable in the Azure Pipelines","usage":"<%= command.id %> -u <string> -p <string> -k <string> -v <string> -i <string> -o <string> -g <string> [--json] [--loglevel trace|debug|info|warn|error|fatal]","pluginName":"sfpowerkit","pluginType":"core","aliases":[],"examples":["$ sfdx sfpowerkit:azpipelines:updatevariable -u az@devops.com -p pax -k env.consumerkey -v sdassad -i 8\n  Generated Admin Profile succesfully\n  "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal)","options":["trace","debug","info","warn","error","fatal"],"default":"warn"},"username":{"name":"username","type":"option","char":"u","description":"Username of the azure pipelines account","required":true},"pat":{"name":"pat","type":"option","char":"p","description":"PAT for the userpipelines","required":true},"key":{"name":"key","type":"option","char":"k","description":"Key of the variable to be updated","required":true},"value":{"name":"value","type":"option","char":"v","description":"Value of the variable to be updated","required":true},"id":{"name":"id","type":"option","char":"i","description":"Id of the variale group in which the variable has to be updated","required":true},"orgname":{"name":"orgname","type":"option","char":"o","description":"Azue Pipeline Org","required":true},"projectname":{"name":"projectname","type":"option","char":"g","description":"Project in Azure Pipelines","required":true}},"args":[]},"sfpowerkit:org:healthcheck":{"id":"sfpowerkit:org:healthcheck","description":"Gets the health details of an org","usage":"<%= command.id %> [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal]","pluginName":"sfpowerkit","pluginType":"core","aliases":[],"examples":["$ sfdx sfpowerkit:org:healthcheck  -u myOrg@example.com\n  Successfully Retrived the healthstatus of the org\n  "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal)","options":["trace","debug","info","warn","error","fatal"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"}},"args":[]},"sfpowerkit:org:orgcoverage":{"id":"sfpowerkit:org:orgcoverage","description":"Gets the apex test coverage details of an org","usage":"<%= command.id %> [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal]","pluginName":"sfpowerkit","pluginType":"core","aliases":[],"examples":["$ sfdx sfpowerkit:org:orgcoverage  -u myOrg@example.com\n  Successfully Retrieved the Apex Test Coverage of the org XXXX\n  coverage:85\n  "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal)","options":["trace","debug","info","warn","error","fatal"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"}},"args":[]},"sfpowerkit:package:valid":{"id":"sfpowerkit:package:valid","description":"Validates a package to check whether it only contains valid metadata as per metadata coverage","usage":"<%= command.id %> [-n <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal]","pluginName":"sfpowerkit","pluginType":"core","aliases":[],"examples":["$ sfdx sfpowerkit:package:valid -n testPackage\n  Now analyzing inspections\nConverting package testPackage\nElements supported included in your package testPackage are\n[\n  \"AuraDefinitionBundle\",\n  \"CustomApplication\",\n  \"ApexClass\",\n  \"ContentAsset\",\n  \"WorkflowRule\"\n]\n  "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal)","options":["trace","debug","info","warn","error","fatal"],"default":"warn"},"package":{"name":"package","type":"option","char":"n","description":"the package to analyze","required":false}},"args":[]},"sfpowerkit:org:connectedapp:create":{"id":"sfpowerkit:org:connectedapp:create","description":" Creates a connected app in the target org for JWT based authentication, Please note it only creates Connected App with All users may self authorize option, You would need to manually edit the policies to enable admin users are pre-approved and add your profile to this connected app","usage":"<%= command.id %> -n <string> -c <filepath> -e <email> [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal]","pluginName":"sfpowerkit","pluginType":"core","aliases":[],"examples":["$ sfdx  sfpowerkit:org:connectedapp:create -u myOrg@example.com -n AzurePipelines -c id_rsa -e azlam.salamm@invalid.com\n  Created Connected App AzurePipelines in Target Org\n  "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal)","options":["trace","debug","info","warn","error","fatal"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"name":{"name":"name","type":"option","char":"n","description":"Name of the connected app to be created","required":true},"pathtocertificate":{"name":"pathtocertificate","type":"option","char":"c","description":"Filepath to the private certificate for the connected app to be created","required":true},"email":{"name":"email","type":"option","char":"e","description":"Email of the connected app to be created","required":true}},"args":[]},"sfpowerkit:org:connectedapp:retrieve":{"id":"sfpowerkit:org:connectedapp:retrieve","description":"Retrieves the consumer key for a connected app, Useful after a sandbox refresh in a CD Environment","usage":"<%= command.id %> -n <string> -u <string> -p <string> [-s <string>] [-r <url>] [--json] [--loglevel trace|debug|info|warn|error|fatal]","pluginName":"sfpowerkit","pluginType":"core","aliases":[],"examples":["$ sfdx  sfpowerkit:org:connectedapp:retrieve -u azlam@sfdc.com -p Xasdax2w2 -n AzurePipelines\n  Retrived AzurePipelines Consumer Key : XSD21Sd23123w21321\n  "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal)","options":["trace","debug","info","warn","error","fatal"],"default":"warn"},"name":{"name":"name","type":"option","char":"n","description":"Name of the connected app to be retreived","required":true},"username":{"name":"username","type":"option","char":"u","description":"Username for the org","required":true},"password":{"name":"password","type":"option","char":"p","description":"Password for the org","required":true},"securitytoken":{"name":"securitytoken","type":"option","char":"s","description":"Security Token for the org","required":false},"url":{"name":"url","type":"option","char":"r","description":"Security Token for the org","required":false}},"args":[]},"sfpowerkit:org:sandbox:create":{"id":"sfpowerkit:org:sandbox:create","description":"Creates a sandbox using the tooling api, ensure the user has the required permissions before using this command","usage":"<%= command.id %> -n <string> -d <string> -l <string> [-a <string>] [-f <string>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal]","pluginName":"sfpowerkit","pluginType":"core","aliases":[],"examples":["$ sfdx sfpowerkit:org:sandbox:create -d Testsandbox -l DEVELOPER -n test2 -u myOrg@example.com\n  Successfully Enqueued Creation of Sandbox\n  "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal)","options":["trace","debug","info","warn","error","fatal"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"name":{"name":"name","type":"option","char":"n","description":"Name of the sandbox","required":true},"description":{"name":"description","type":"option","char":"d","description":"Description of the sandbox","required":true},"licensetype":{"name":"licensetype","type":"option","char":"l","description":"Type of the sandbox. Valid values are  DEVELOPER,DEVELOPER_PRO,PARTIAL,FULL","required":true,"options":["DEVELOPER","DEVELOPER_PRO","PARTIAL","FULL"]},"apexclass":{"name":"apexclass","type":"option","char":"a","description":"A reference to the ID of an Apex class that runs after each copy of the sandbox","required":false,"default":""},"clonefrom":{"name":"clonefrom","type":"option","char":"f","description":"A reference to the ID of a SandboxInfo that serves as the source org for a cloned sandbox.","required":false,"default":""}},"args":[]},"sfpowerkit:org:sandbox:info":{"id":"sfpowerkit:org:sandbox:info","description":"Gets the status of a sandbox","usage":"<%= command.id %> -n <string> [-s] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal]","pluginName":"sfpowerkit","pluginType":"core","aliases":[],"examples":["$ sfdx sfpowerkit:org:sandbox:info -n test2  -u produser@example.com \n  Successfully Enqueued Refresh of Sandbox\n  "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal)","options":["trace","debug","info","warn","error","fatal"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"name":{"name":"name","type":"option","char":"n","description":"Name of the sandbox","required":true},"showonlylatest":{"name":"showonlylatest","type":"boolean","char":"s","description":"Shows only the latest info of the sandbox record","required":false,"allowNo":false}},"args":[]},"sfpowerkit:org:sandbox:refresh":{"id":"sfpowerkit:org:sandbox:refresh","description":"Refresh a sandbox using the tooling api, ensure the user has the required permissions before using this command","usage":"<%= command.id %> -n <string> [-f <string>] [-l <string>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal]","pluginName":"sfpowerkit","pluginType":"core","aliases":[],"examples":["$ sfdx sfpowerkit:org:sandbox:refresh -n test2  -f sitSandbox -u myOrg@example.com\n  Successfully Enqueued Refresh of Sandbox\n  "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal)","options":["trace","debug","info","warn","error","fatal"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"name":{"name":"name","type":"option","char":"n","description":"Name of the sandbox","required":true},"clonefrom":{"name":"clonefrom","type":"option","char":"f","description":"Name of the SandboxInfo that serves as the source org for a cloned sandbox.","required":false,"default":""},"licensetype":{"name":"licensetype","type":"option","char":"l","description":"Type of the sandbox. Valid values are  DEVELOPER,DEVELOPER_PRO,PARTIAL,FULL, Provide this if the sandbox is to be rereshed from Production","required":false,"options":["DEVELOPER","DEVELOPER_PRO","PARTIAL","FULL"]}},"args":[]},"sfpowerkit:package:dependencies:install":{"id":"sfpowerkit:package:dependencies:install","description":"Install dependencies of a package","usage":"<%= command.id %> [-p <string>] [-k <string>] [-b <string>] [-w <string>] [-r] [-v <string>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal]","pluginName":"sfpowerkit","pluginType":"core","aliases":[],"examples":["$ sfpowerkit package:dependencies:install -u MyScratchOrg -v MyDevHub -k \"1:MyPackage1Key 2: 3:MyPackage3Key\" -b \"DEV\""],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal)","options":["trace","debug","info","warn","error","fatal"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"individualpackage":{"name":"individualpackage","type":"option","char":"p","description":"Installs a specific package especially for upgrade scenario","required":false},"installationkeys":{"name":"installationkeys","type":"option","char":"k","description":"installation key for key-protected packages (format is 1:MyPackage1Key 2: 3:MyPackage3Key... to allow some packages without installation key)","required":false},"branch":{"name":"branch","type":"option","char":"b","description":"the package version’s branch","required":false},"wait":{"name":"wait","type":"option","char":"w","description":"number of minutes to wait for installation status (also used for publishwait). Default is 10","required":false},"noprompt":{"name":"noprompt","type":"boolean","char":"r","description":"allow Remote Site Settings and Content Security Policy websites to send or receive data without confirmation","required":false,"allowNo":false}},"args":[]},"sfpowerkit:source:profile:generate":{"id":"sfpowerkit:source:profile:generate","description":"Gets the status of a sandbox","usage":"<%= command.id %> -x <filepath> [--json] [--loglevel trace|debug|info|warn|error|fatal]","pluginName":"sfpowerkit","pluginType":"core","aliases":[],"examples":["$ sfdx sfpowerkit:source:profile:generate -x package.xml\n  Generated Admin Profile succesfully\n  "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal)","options":["trace","debug","info","warn","error","fatal"],"default":"warn"},"name":{"name":"name","type":"option","char":"x","description":"Name of the sandbox","required":true}},"args":[]}}}